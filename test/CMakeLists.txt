function(ADD_PIRANHA_TESTCASE arg1)
  add_executable(${arg1} ${arg1}.cpp)
  target_link_libraries(${arg1} piranha)
  target_compile_options(${arg1} PRIVATE "$<$<CONFIG:DEBUG>:${PIRANHA_CXX_FLAGS_DEBUG}>" "$<$<CONFIG:RELEASE>:${PIRANHA_CXX_FLAGS_RELEASE}>" "$<$<CONFIG:RelWithDebInfo>:${PIRANHA_CXX_FLAGS_RELEASE}>" 
                                         "$<$<CONFIG:MinSizeRel>:${PIRANHA_CXX_FLAGS_RELEASE}>")
  set_property(TARGET ${arg1} PROPERTY CXX_STANDARD 17)
  set_property(TARGET ${arg1} PROPERTY CXX_STANDARD_REQUIRED YES)
  set_property(TARGET ${arg1} PROPERTY CXX_EXTENSIONS NO)
  add_test(${arg1} ${arg1})
endfunction()

ADD_PIRANHA_TESTCASE(atomic_utils)
ADD_PIRANHA_TESTCASE(cf_cf_stream_insert)
ADD_PIRANHA_TESTCASE(exceptions)
ADD_PIRANHA_TESTCASE(hash)
ADD_PIRANHA_TESTCASE(hc)
ADD_PIRANHA_TESTCASE(key_key_is_compatible)
ADD_PIRANHA_TESTCASE(key_key_is_one)
ADD_PIRANHA_TESTCASE(key_key_is_zero)
ADD_PIRANHA_TESTCASE(key_key_merge_symbols)
ADD_PIRANHA_TESTCASE(key_key_stream_insert)
ADD_PIRANHA_TESTCASE(math_fma3)
ADD_PIRANHA_TESTCASE(math_is_zero)
ADD_PIRANHA_TESTCASE(math_negate)
ADD_PIRANHA_TESTCASE(math_pow)
ADD_PIRANHA_TESTCASE(math_safe_cast)
ADD_PIRANHA_TESTCASE(math_safe_convert)
ADD_PIRANHA_TESTCASE(polynomials_monomial_mul)
ADD_PIRANHA_TESTCASE(polynomials_monomial_range_overflow_check)
ADD_PIRANHA_TESTCASE(polynomials_packed_monomial)
ADD_PIRANHA_TESTCASE(polynomials_polynomial)
ADD_PIRANHA_TESTCASE(ranges)
ADD_PIRANHA_TESTCASE(series_00)
ADD_PIRANHA_TESTCASE(series_01)
ADD_PIRANHA_TESTCASE(series_02)
ADD_PIRANHA_TESTCASE(symbols)
ADD_PIRANHA_TESTCASE(tcast)
ADD_PIRANHA_TESTCASE(to_string)
ADD_PIRANHA_TESTCASE(type_traits)
ADD_PIRANHA_TESTCASE(utils_bit_packing)
ADD_PIRANHA_TESTCASE(utils_stacktrace)
ADD_PIRANHA_TESTCASE(utils_type_name)
